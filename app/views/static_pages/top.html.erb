<%= render 'shared/nav' %>

<div id="selected-bottoms-true" data-json="<%=@selected_bottoms.present?%>">
<% if @selected_bottoms.present?%>
  <% for n in 0...@selected_bottoms.count %>
    <div id="selected-bottoms-count" data-json="<%= @selected_bottoms.count %>">
    <div id="selected-bottoms-<%=n%>" data-json="<%= @selected_bottoms[n].image.url.to_json%>">
    </div>
  <% end %>
<% end %>

<div id="selected-tops-true" data-json="<%=@selected_tops.present?%>">
<% if @selected_tops.present?%>
  <% for n in 0...@selected_tops.count %>
    <div id="selected-tops-count" data-json="<%= @selected_tops.count %>">
    <div id="selected-tops-<%=n%>" data-json="<%= @selected_tops[n].image.url.to_json%>">
    </div>
  <% end %>
<% end %>
<div class="box-wrapper">
  <span>ブラウザをリロードすると服の選択はすべて解除されます。</span>
  <div class="canvas-wrapper">
    <canvas id="canvas" width="600" height="600"></canvas>
  </div>
  <span>chromeで画像のダウンロードがうまくいかない場合は、<br>safariを利用してください。</span>
</div>
<div class="buttons flex">
  <button class="button" id="download">Download</button>
  <button class="button" id="deleteBtn">Delete</button>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/fabric.js/2.4.0/fabric.min.js"></script>
<script>
$(function () {
  var w = $('.canvas-wrapper').width();
  var h = $('.canvas-wrapper').height();
  $('#canvas').attr('width', w);
  $('#canvas').attr('height', h);
  // ダウンロード
  $("#download").on('click', function () {
    var canvas = document.getElementById("canvas");
    canvas.setAttribute("crossOrigin","anonymous");
    var link = document.createElement("a");
    link.href = canvas.toDataURL("image/png");
    link.download = "outfit.png";
    link.click();
  });
  // 即時関数。関数を定義すると同時に実行する。
  (function () {
    var canvas = new fabric.Canvas('canvas',{
      crossOrigin: "anonymous"
    });
    if (JSON.parse(document.getElementById("selected-bottoms-true").dataset.json)) {
      N = JSON.parse(document.getElementById("selected-bottoms-count").dataset.json);
      var srcs_bottoms = [];
      for (var n = 0; n < N; n++) {
        srcs_bottoms.push(JSON.parse(document.getElementById(`selected-bottoms-${n}`).dataset.json))
      };
    }

    if (JSON.parse(document.getElementById("selected-tops-true").dataset.json)) {
      N = JSON.parse(document.getElementById("selected-tops-count").dataset.json);
      var srcs_tops = [];
      for (var n = 0; n < N; n++) {
        srcs_tops.push(JSON.parse(document.getElementById(`selected-tops-${n}`).dataset.json))
      };
    }

    for (var i in srcs_bottoms) {
      fabric.Image.fromURL(`${srcs_bottoms[i]}`, function (oImg) {
        bottoms = oImg;
        bottoms.crossOrigin = "anonymous";
        bottoms.setControlsVisibility({
          mt: false,
          mb: false,
          ml: false,
          mr: false,
          mtr: false,
        });
        canvas.add(bottoms);
      });
    };
    for (var i in srcs_tops) {
      fabric.Image.fromURL(`${srcs_tops[i]}`, function (oImg) {
        tops = oImg;
        tops.crossOrigin = "anonymous";
        tops.setControlsVisibility({
          mt: false,
          mb: false,
          ml: false,
          mr: false,
          mtr: false,
        });
        canvas.add(tops);
      });
    };

    function deleteObj() {
      //選択されているオブジェクトを削除する。
      let activeObjects = canvas.getActiveObjects();

      if (activeObjects != null) {
        if (confirm('選択された画像を削除しますか？')) {
          activeObjects.forEach(obj => {

            //対象オブジェクトを削除
            canvas.remove(obj);

            //矩形のIDとcanvas.item紐づけ用配列も削除する。
            let arrIndex = arrayRect.indexOf(obj.id);
            arrayRect.splice(arrIndex, 1);
          });
        }
      } else {
        alert("オブジェクトが選択されていません。");
      }
    }
    deleteBtn.addEventListener('click', deleteObj, false);
  })();
  window.onload = function () {
    // 直接順番指定
    if (typeof tops != 'undefined'){
    tops.moveTo(100);
    }
    if (typeof bottoms != 'undefined'){
    bottoms.moveTo(0);
    }
  };
});

</script>
